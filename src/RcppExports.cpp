// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// nu_k_root_finder_equation_cpp
double nu_k_root_finder_equation_cpp(arma::cube data, int p, arma::vec z_k, int n_k, double nu_k, arma::mat Sigma_inv_k, int N);
RcppExport SEXP _sparsemixwishart_nu_k_root_finder_equation_cpp(SEXP dataSEXP, SEXP pSEXP, SEXP z_kSEXP, SEXP n_kSEXP, SEXP nu_kSEXP, SEXP Sigma_inv_kSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z_k(z_kSEXP);
    Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP);
    Rcpp::traits::input_parameter< double >::type nu_k(nu_kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_inv_k(Sigma_inv_kSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(nu_k_root_finder_equation_cpp(data, p, z_k, n_k, nu_k, Sigma_inv_k, N));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sparsemixwishart_nu_k_root_finder_equation_cpp", (DL_FUNC) &_sparsemixwishart_nu_k_root_finder_equation_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_sparsemixwishart(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
